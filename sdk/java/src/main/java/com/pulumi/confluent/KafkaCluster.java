// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.confluent;

import com.pulumi.confluent.KafkaClusterArgs;
import com.pulumi.confluent.Utilities;
import com.pulumi.confluent.inputs.KafkaClusterState;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Integer;
import java.lang.String;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

@ResourceType(type="confluent:index/kafkaCluster:KafkaCluster")
public class KafkaCluster extends com.pulumi.resources.CustomResource {
    /**
     * LOW(single-zone) or HIGH(multi-zone)
     * 
     */
    @Export(name="availability", type=String.class, parameters={})
    private Output<String> availability;

    /**
     * @return LOW(single-zone) or HIGH(multi-zone)
     * 
     */
    public Output<String> availability() {
        return this.availability;
    }
    @Export(name="bootstrapServers", type=String.class, parameters={})
    private Output<String> bootstrapServers;

    public Output<String> bootstrapServers() {
        return this.bootstrapServers;
    }
    /**
     * cku
     * 
     */
    @Export(name="cku", type=Integer.class, parameters={})
    private Output</* @Nullable */ Integer> cku;

    /**
     * @return cku
     * 
     */
    public Output<Optional<Integer>> cku() {
        return Codegen.optional(this.cku);
    }
    /**
     * Deployment settings. Currently only `sku` is supported.
     * 
     */
    @Export(name="deployment", type=Map.class, parameters={String.class, String.class})
    private Output</* @Nullable */ Map<String,String>> deployment;

    /**
     * @return Deployment settings. Currently only `sku` is supported.
     * 
     */
    public Output<Optional<Map<String,String>>> deployment() {
        return Codegen.optional(this.deployment);
    }
    /**
     * Environment ID
     * 
     */
    @Export(name="environmentId", type=String.class, parameters={})
    private Output<String> environmentId;

    /**
     * @return Environment ID
     * 
     */
    public Output<String> environmentId() {
        return this.environmentId;
    }
    /**
     * The name of the cluster
     * 
     */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return The name of the cluster
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * Network egress limit(MBps)
     * 
     */
    @Export(name="networkEgress", type=Integer.class, parameters={})
    private Output</* @Nullable */ Integer> networkEgress;

    /**
     * @return Network egress limit(MBps)
     * 
     */
    public Output<Optional<Integer>> networkEgress() {
        return Codegen.optional(this.networkEgress);
    }
    /**
     * Network ingress limit(MBps)
     * 
     */
    @Export(name="networkIngress", type=Integer.class, parameters={})
    private Output</* @Nullable */ Integer> networkIngress;

    /**
     * @return Network ingress limit(MBps)
     * 
     */
    public Output<Optional<Integer>> networkIngress() {
        return Codegen.optional(this.networkIngress);
    }
    /**
     * where
     * 
     */
    @Export(name="region", type=String.class, parameters={})
    private Output<String> region;

    /**
     * @return where
     * 
     */
    public Output<String> region() {
        return this.region;
    }
    /**
     * AWS / GCP
     * 
     */
    @Export(name="serviceProvider", type=String.class, parameters={})
    private Output<String> serviceProvider;

    /**
     * @return AWS / GCP
     * 
     */
    public Output<String> serviceProvider() {
        return this.serviceProvider;
    }
    /**
     * Storage limit(GB)
     * 
     */
    @Export(name="storage", type=Integer.class, parameters={})
    private Output</* @Nullable */ Integer> storage;

    /**
     * @return Storage limit(GB)
     * 
     */
    public Output<Optional<Integer>> storage() {
        return Codegen.optional(this.storage);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public KafkaCluster(String name) {
        this(name, KafkaClusterArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public KafkaCluster(String name, KafkaClusterArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public KafkaCluster(String name, KafkaClusterArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("confluent:index/kafkaCluster:KafkaCluster", name, args == null ? KafkaClusterArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private KafkaCluster(String name, Output<String> id, @Nullable KafkaClusterState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("confluent:index/kafkaCluster:KafkaCluster", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static KafkaCluster get(String name, Output<String> id, @Nullable KafkaClusterState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new KafkaCluster(name, id, state, options);
    }
}
