# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

from . import _utilities
import typing
# Export this package's modules as members:
from .api_key import *
from .confluent_environment import *
from .connector import *
from .get_environment import *
from .get_service_account import *
from .kafka_cluster import *
from .provider import *
from .schema_registry import *
from .service_account import *

# Make subpackages available:
if typing.TYPE_CHECKING:
    import pulumi_confluent.config as __config
    config = __config
else:
    config = _utilities.lazy_import('pulumi_confluent.config')

_utilities.register(
    resource_modules="""
[
 {
  "pkg": "confluent",
  "mod": "index/apiKey",
  "fqn": "pulumi_confluent",
  "classes": {
   "confluent:index/apiKey:ApiKey": "ApiKey"
  }
 },
 {
  "pkg": "confluent",
  "mod": "index/confluentEnvironment",
  "fqn": "pulumi_confluent",
  "classes": {
   "confluent:index/confluentEnvironment:ConfluentEnvironment": "ConfluentEnvironment"
  }
 },
 {
  "pkg": "confluent",
  "mod": "index/connector",
  "fqn": "pulumi_confluent",
  "classes": {
   "confluent:index/connector:Connector": "Connector"
  }
 },
 {
  "pkg": "confluent",
  "mod": "index/kafkaCluster",
  "fqn": "pulumi_confluent",
  "classes": {
   "confluent:index/kafkaCluster:KafkaCluster": "KafkaCluster"
  }
 },
 {
  "pkg": "confluent",
  "mod": "index/schemaRegistry",
  "fqn": "pulumi_confluent",
  "classes": {
   "confluent:index/schemaRegistry:SchemaRegistry": "SchemaRegistry"
  }
 },
 {
  "pkg": "confluent",
  "mod": "index/serviceAccount",
  "fqn": "pulumi_confluent",
  "classes": {
   "confluent:index/serviceAccount:ServiceAccount": "ServiceAccount"
  }
 }
]
""",
    resource_packages="""
[
 {
  "pkg": "confluent",
  "token": "pulumi:providers:confluent",
  "fqn": "pulumi_confluent",
  "class": "Provider"
 }
]
"""
)
