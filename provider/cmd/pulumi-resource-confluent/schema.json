{
    "name": "confluent",
    "description": "A Pulumi package for creating and managing confluent cloud resources.",
    "keywords": [
        "pulumi",
        "confluent"
    ],
    "homepage": "https://pulumi.io",
    "license": "Apache-2.0",
    "attribution": "This Pulumi package is based on the [`confluent` Terraform Provider](https://github.com/Mongey/terraform-provider-confluent).",
    "repository": "https://github.com/pulumi/pulumi-confluent",
    "meta": {
        "moduleFormat": "(.*)(?:/[^/]*)"
    },
    "config": {
        "variables": {
            "password": {
                "type": "string"
            },
            "username": {
                "type": "string"
            }
        }
    },
    "provider": {
        "description": "The provider type for the confluent package. By default, resources use package-wide configuration\nsettings, however an explicit `Provider` instance may be created and passed during resource\nconstruction to achieve fine-grained programmatic control over provider settings. See the\n[documentation](https://www.pulumi.com/docs/reference/programming-model/#providers) for more information.\n",
        "properties": {
            "password": {
                "type": "string"
            },
            "username": {
                "type": "string"
            }
        },
        "inputProperties": {
            "password": {
                "type": "string"
            },
            "username": {
                "type": "string"
            }
        }
    },
    "resources": {
        "confluent:index/apiKey:ApiKey": {
            "properties": {
                "clusterId": {
                    "type": "string"
                },
                "description": {
                    "type": "string",
                    "description": "Description\n"
                },
                "environmentId": {
                    "type": "string",
                    "description": "Environment ID\n"
                },
                "key": {
                    "type": "string"
                },
                "logicalClusters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Logical Cluster ID List to create API Key\n"
                },
                "secret": {
                    "type": "string"
                },
                "userId": {
                    "type": "integer",
                    "description": "User ID\n"
                }
            },
            "required": [
                "environmentId",
                "key",
                "secret"
            ],
            "inputProperties": {
                "clusterId": {
                    "type": "string"
                },
                "description": {
                    "type": "string",
                    "description": "Description\n"
                },
                "environmentId": {
                    "type": "string",
                    "description": "Environment ID\n"
                },
                "logicalClusters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Logical Cluster ID List to create API Key\n"
                },
                "userId": {
                    "type": "integer",
                    "description": "User ID\n"
                }
            },
            "requiredInputs": [
                "environmentId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ApiKey resources.\n",
                "properties": {
                    "clusterId": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description\n"
                    },
                    "environmentId": {
                        "type": "string",
                        "description": "Environment ID\n"
                    },
                    "key": {
                        "type": "string"
                    },
                    "logicalClusters": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Logical Cluster ID List to create API Key\n"
                    },
                    "secret": {
                        "type": "string"
                    },
                    "userId": {
                        "type": "integer",
                        "description": "User ID\n"
                    }
                },
                "type": "object"
            }
        },
        "confluent:index/confluentEnvironment:ConfluentEnvironment": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The name of the environment\n"
                }
            },
            "required": [
                "name"
            ],
            "inputProperties": {
                "name": {
                    "type": "string",
                    "description": "The name of the environment\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ConfluentEnvironment resources.\n",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The name of the environment\n"
                    }
                },
                "type": "object"
            }
        },
        "confluent:index/connector:Connector": {
            "properties": {
                "clusterId": {
                    "type": "string",
                    "description": "ID of containing cluster, e.g. lkc-abc123\n"
                },
                "config": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "description": "Type-specific Configuration of connector. String keys and values\n"
                },
                "configSensitive": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "description": "Sensitive part of connector configuration. String keys and values\n"
                },
                "environmentId": {
                    "type": "string",
                    "description": "ID of containing environment, e.g. env-abc123\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the connector\n"
                }
            },
            "required": [
                "clusterId",
                "config",
                "environmentId",
                "name"
            ],
            "inputProperties": {
                "clusterId": {
                    "type": "string",
                    "description": "ID of containing cluster, e.g. lkc-abc123\n"
                },
                "config": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "description": "Type-specific Configuration of connector. String keys and values\n"
                },
                "configSensitive": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "description": "Sensitive part of connector configuration. String keys and values\n"
                },
                "environmentId": {
                    "type": "string",
                    "description": "ID of containing environment, e.g. env-abc123\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the connector\n"
                }
            },
            "requiredInputs": [
                "clusterId",
                "config",
                "environmentId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Connector resources.\n",
                "properties": {
                    "clusterId": {
                        "type": "string",
                        "description": "ID of containing cluster, e.g. lkc-abc123\n"
                    },
                    "config": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "pulumi.json#/Any"
                        },
                        "description": "Type-specific Configuration of connector. String keys and values\n"
                    },
                    "configSensitive": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "pulumi.json#/Any"
                        },
                        "description": "Sensitive part of connector configuration. String keys and values\n"
                    },
                    "environmentId": {
                        "type": "string",
                        "description": "ID of containing environment, e.g. env-abc123\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the connector\n"
                    }
                },
                "type": "object"
            }
        },
        "confluent:index/kafkaCluster:KafkaCluster": {
            "properties": {
                "availability": {
                    "type": "string",
                    "description": "LOW(single-zone) or HIGH(multi-zone)\n"
                },
                "bootstrapServers": {
                    "type": "string"
                },
                "cku": {
                    "type": "integer",
                    "description": "cku\n"
                },
                "deployment": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Deployment settings. Currently only `sku` is supported.\n"
                },
                "environmentId": {
                    "type": "string",
                    "description": "Environment ID\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the cluster\n"
                },
                "networkEgress": {
                    "type": "integer",
                    "description": "Network egress limit(MBps)\n"
                },
                "networkIngress": {
                    "type": "integer",
                    "description": "Network ingress limit(MBps)\n"
                },
                "region": {
                    "type": "string",
                    "description": "where\n"
                },
                "serviceProvider": {
                    "type": "string",
                    "description": "AWS / GCP\n"
                },
                "storage": {
                    "type": "integer",
                    "description": "Storage limit(GB)\n"
                }
            },
            "required": [
                "availability",
                "bootstrapServers",
                "environmentId",
                "name",
                "region",
                "serviceProvider"
            ],
            "inputProperties": {
                "availability": {
                    "type": "string",
                    "description": "LOW(single-zone) or HIGH(multi-zone)\n"
                },
                "cku": {
                    "type": "integer",
                    "description": "cku\n"
                },
                "deployment": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Deployment settings. Currently only `sku` is supported.\n"
                },
                "environmentId": {
                    "type": "string",
                    "description": "Environment ID\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the cluster\n"
                },
                "networkEgress": {
                    "type": "integer",
                    "description": "Network egress limit(MBps)\n"
                },
                "networkIngress": {
                    "type": "integer",
                    "description": "Network ingress limit(MBps)\n"
                },
                "region": {
                    "type": "string",
                    "description": "where\n"
                },
                "serviceProvider": {
                    "type": "string",
                    "description": "AWS / GCP\n"
                },
                "storage": {
                    "type": "integer",
                    "description": "Storage limit(GB)\n"
                }
            },
            "requiredInputs": [
                "availability",
                "environmentId",
                "region",
                "serviceProvider"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering KafkaCluster resources.\n",
                "properties": {
                    "availability": {
                        "type": "string",
                        "description": "LOW(single-zone) or HIGH(multi-zone)\n"
                    },
                    "bootstrapServers": {
                        "type": "string"
                    },
                    "cku": {
                        "type": "integer",
                        "description": "cku\n"
                    },
                    "deployment": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Deployment settings. Currently only `sku` is supported.\n"
                    },
                    "environmentId": {
                        "type": "string",
                        "description": "Environment ID\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the cluster\n"
                    },
                    "networkEgress": {
                        "type": "integer",
                        "description": "Network egress limit(MBps)\n"
                    },
                    "networkIngress": {
                        "type": "integer",
                        "description": "Network ingress limit(MBps)\n"
                    },
                    "region": {
                        "type": "string",
                        "description": "where\n"
                    },
                    "serviceProvider": {
                        "type": "string",
                        "description": "AWS / GCP\n"
                    },
                    "storage": {
                        "type": "integer",
                        "description": "Storage limit(GB)\n"
                    }
                },
                "type": "object"
            }
        },
        "confluent:index/schemaRegistry:SchemaRegistry": {
            "properties": {
                "endpoint": {
                    "type": "string"
                },
                "environmentId": {
                    "type": "string",
                    "description": "Environment ID\n"
                },
                "region": {
                    "type": "string",
                    "description": "where\n"
                },
                "serviceProvider": {
                    "type": "string",
                    "description": "Cloud provider\n"
                }
            },
            "required": [
                "endpoint",
                "environmentId",
                "region",
                "serviceProvider"
            ],
            "inputProperties": {
                "environmentId": {
                    "type": "string",
                    "description": "Environment ID\n"
                },
                "region": {
                    "type": "string",
                    "description": "where\n"
                },
                "serviceProvider": {
                    "type": "string",
                    "description": "Cloud provider\n"
                }
            },
            "requiredInputs": [
                "environmentId",
                "region",
                "serviceProvider"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SchemaRegistry resources.\n",
                "properties": {
                    "endpoint": {
                        "type": "string"
                    },
                    "environmentId": {
                        "type": "string",
                        "description": "Environment ID\n"
                    },
                    "region": {
                        "type": "string",
                        "description": "where\n"
                    },
                    "serviceProvider": {
                        "type": "string",
                        "description": "Cloud provider\n"
                    }
                },
                "type": "object"
            }
        },
        "confluent:index/serviceAccount:ServiceAccount": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "Service Account Description\n"
                },
                "name": {
                    "type": "string",
                    "description": "Service Account Name\n"
                }
            },
            "required": [
                "description",
                "name"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "Service Account Description\n"
                },
                "name": {
                    "type": "string",
                    "description": "Service Account Name\n"
                }
            },
            "requiredInputs": [
                "description"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ServiceAccount resources.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "Service Account Description\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Service Account Name\n"
                    }
                },
                "type": "object"
            }
        }
    },
    "functions": {
        "confluent:index/getEnvironment:getEnvironment": {
            "inputs": {
                "description": "A collection of arguments for invoking getEnvironment.\n",
                "properties": {
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getEnvironment.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "id"
                ]
            }
        },
        "confluent:index/getServiceAccount:getServiceAccount": {
            "inputs": {
                "description": "A collection of arguments for invoking getServiceAccount.\n",
                "properties": {
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getServiceAccount.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "id"
                ]
            }
        }
    },
    "language": {
        "csharp": {
            "compatibility": "tfbridge20",
            "namespaces": null,
            "packageReferences": {
                "Pulumi": "3.*"
            }
        },
        "go": {
            "generateResourceContainerTypes": true,
            "importBasePath": "github.com/pulumi/pulumi-confluent/sdk/go/confluent"
        },
        "nodejs": {
            "compatibility": "tfbridge20",
            "dependencies": {
                "@pulumi/pulumi": "^3.0.0"
            },
            "devDependencies": {
                "@types/mime": "^2.0.0",
                "@types/node": "^10.0.0"
            },
            "disableUnionOutputTypes": true,
            "packageDescription": "A Pulumi package for creating and managing confluent cloud resources.",
            "packageName": "",
            "readme": "\u003e This provider is a derived work of the [Terraform Provider](https://github.com/Mongey/terraform-provider-confluent)\n\u003e distributed under [MPL 2.0](https://www.mozilla.org/en-US/MPL/2.0/). If you encounter a bug or missing feature,\n\u003e first check the [`pulumi/pulumi-confluent` repo](https://github.com/pulumi/pulumi-confluent/issues); however, if that doesn't turn up anything,\n\u003e please consult the source [`Mongey/terraform-provider-confluent` repo](https://github.com/Mongey/terraform-provider-confluent/issues).",
            "typescriptVersion": ""
        },
        "python": {
            "compatibility": "tfbridge20",
            "readme": "\u003e This provider is a derived work of the [Terraform Provider](https://github.com/Mongey/terraform-provider-confluent)\n\u003e distributed under [MPL 2.0](https://www.mozilla.org/en-US/MPL/2.0/). If you encounter a bug or missing feature,\n\u003e first check the [`pulumi/pulumi-confluent` repo](https://github.com/pulumi/pulumi-confluent/issues); however, if that doesn't turn up anything,\n\u003e please consult the source [`Mongey/terraform-provider-confluent` repo](https://github.com/Mongey/terraform-provider-confluent/issues).",
            "requires": {
                "pulumi": "\u003e=3.0.0,\u003c4.0.0"
            }
        }
    }
}